#!/usr/bin/env bash

set -euo pipefail

if [[ "$UID" != "0" ]] ; then
    exec sudo DEBUG="${DEBUG-}" PROFILE="${PROFILE-}" "$0"
fi

SCRIPT_DIR="$(python -c 'import os, sys; print(os.path.dirname(os.path.realpath(sys.argv[1])))' "$BASH_SOURCE")"
LOCKDIR_NAME=.lock

. ${SCRIPT_DIR}/environment

FLAGS=''
if [ -n "${DEBUG-}" ] ; then
    FLAGS="$FLAGS --debug"
    if [ -n "${PROFILE-}" ]; then
        FLAGS="$FLAGS --profile"
    fi
else
    unset DEBUG
    unset PROFILE
fi

[[ -e $ROOT_PATH/environments ]] || mkdir -p $ROOT_PATH/environments
[[ -e $ROOT_PATH/environments/production ]] || ln -s $ROOT_PATH/repo $ROOT_PATH/environments/production

(
    cd $REPO_PATH

    mkdir "$LOCKDIR_NAME" || (
        echo "It appears a puppet-run is already in progress"
        echo "If this is not the case, run: rm -r $REPO_PATH/.lock"
        exit 1
    )

    function finish() {
        (
            cd $REPO_PATH
            rm -r $LOCKDIR_NAME
        )
    }
    trap finish EXIT

    if [ -n "$(git status -s)" ] ; then
        echo "Repo is unclean: $REPO_PATH"
    else
        git pull &>/dev/null || echo "Failed to update repo: $REPO_PATH"
        git submodule update --init &> /dev/null || echo "Failed to update submodules: $REPO_PATH"
    fi

    [[ -e $OPT_PUPPET_BIN/bundle ]] || gem install --no-user-install -no-document --bindir bundler
    bundle check &>/dev/null || bundle install || ( echo "Failed to update bundle" && exit 1 )

    [[ -e $REPO_PATH/preflight/main.sh ]] && $REPO_PATH/preflight/main.sh

    bundle exec librarian-puppet install --clean

    mkdir -p "$LOG_PATH"
    LOG_FILE="${LOG_PATH}/puppet-run.$(date "+%Y%m%d")"

    function log_prefix() {
        host="$(hostname -f)"
        fmt="%Y-%m-%d %H:%M:%S"
        while IFS= read -r line; do
            prefix="$(date "+$fmt") ${host}"
            echo "${prefix} ${line}"
        done
    }

    exec 3>&1
    (
        echo 'STARTING RUN'
        bundle exec puppet apply \
            "--confdir=$REPO_PATH" \
            "--environment=$PUPPET_ENV" \
            "$ENV_PATH/$PUPPET_ENV/manifests" \
            $FLAGS \
            2>&1
        echo "ENDING RUN"
    ) | log_prefix \
        | tee /dev/fd/3 \
        | sed -E "s/"$'\E'"\[([0-9]{1,2}(;[0-9]{1,2})*)?m//g" \
        >> $LOG_FILE
)
